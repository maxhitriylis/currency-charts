{"version":3,"sources":["store/store.js","components/Table/Table.jsx","components/Chart/Chart.jsx","helpers/getChartConfig.js","helpers/getIsoDates.js","helpers/hooks/useInterval.js","App.jsx","index.js"],"names":["initialState","currencyEUR","currencyUSD","store","createContext","Provider","StateProvider","children","useReducer","state","action","type","payload","Error","dispatch","value","Table","useContext","className","map","el","key","formatISO","Date","representation","Chart","dataUSD","dataEUR","useState","count","setCount","isRunning","setIsRunning","datesISO","useMemo","fromDay","eachDayOfInterval","start","addDays","end","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","a","fetch","resultEUR","resultUSD","json","dateEUR","date","ratesEUR","rates","RUB","dateUSD","ratesUSD","getTime","options","chart","reflow","zoomType","title","text","xAxis","yAxis","legend","enabled","series","name","data","threshold","App","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe28074d.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\nconst initialState = {\n\tcurrencyEUR: [],\n\tcurrencyUSD: [],\n};\nconst store = createContext(initialState);\nconst { Provider } = store;\n\nconst StateProvider = ({ children }) => {\n\tconst [state, dispatch] = useReducer((state, action) => {\n\t\tconst { type, payload } = action;\n\t\tswitch (type) {\n\t\t\tcase 'ADD_CURRENCY':\n\t\t\t\tconst newState = {\n\t\t\t\t\t...state,\n\t\t\t\t\tcurrencyEUR: [...state.currencyEUR, payload.currencyEUR],\n\t\t\t\t\tcurrencyUSD: [...state.currencyUSD, payload.currencyUSD],\n\t\t\t\t};\n\t\t\t\treturn newState;\n\t\t\tdefault:\n\t\t\t\tthrow new Error();\n\t\t}\n\t}, initialState);\n\n\treturn <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider };\n","import React, { useContext } from 'react';\nimport { formatISO } from 'date-fns';\nimport { store } from '../../store/store';\nimport './Table.css';\n\nconst Table = () => {\n\tconst {\n\t\tstate: { currencyEUR, currencyUSD },\n\t\tdispatch,\n\t} = useContext(store);\n\treturn (\n\t\t<div className=\"table\">\n\t\t\t<ul className=\"table-column\">\n\t\t\t\t<li className=\"table-column-title\">EUR</li>\n\t\t\t\t{currencyEUR.map(el => (\n\t\t\t\t\t<li className=\"table-column-item\" key={el[1]}>\n\t\t\t\t\t\tДата: {formatISO(new Date(el[0]), { representation: 'date' })} | Значение: {el[1]}{' '}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t<ul className=\"table-column\">\n\t\t\t\t<li className=\"table-column-title\">USD</li>\n\t\t\t\t{currencyUSD.map(el => (\n\t\t\t\t\t<li className=\"table-column-item\" key={el[1]}>\n\t\t\t\t\t\tДата: {formatISO(new Date(el[0]), { representation: 'date' })} | Значение: {el[1]}{' '}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default Table;\n","import React, { useState, useMemo, useContext } from 'react';\nimport { store } from '../../store/store';\nimport { useInterval } from '../../helpers/hooks/useInterval';\nimport { getIsoDates } from '../../helpers/getIsoDates';\nimport getChartConfig from '../../helpers/getChartConfig';\nimport HighchartsReact from 'highcharts-react-official';\nimport './Chart.css';\n\nconst RESEND_TIME = 0;\n\nconst Chart = () => {\n\tconst [count, setCount] = useState(RESEND_TIME);\n\tconst [isRunning, setIsRunning] = useState(true);\n\tconst datesISO = useMemo(() => getIsoDates(30), []);\n\tconst { state: { currencyUSD, currencyEUR }, dispatch } = useContext(store);\n\n\tuseInterval(\n\t\tasync () => {\n\t\t\tif (count === 30) {\n\t\t\t\tsetCount(RESEND_TIME);\n\n\t\t\t\treturn setIsRunning(false);\n\t\t\t}\n\t\t\tconst resultEUR = await fetch(`https://api.exchangeratesapi.io/${datesISO[count]}?base=EUR&symbols=RUB`);\n\t\t\tconst resultUSD = await fetch(`https://api.exchangeratesapi.io/${datesISO[count]}?base=USD&symbols=RUB`);\n\t\t\tconst {\n\t\t\t\tdate: dateEUR,\n\t\t\t\trates: { RUB: ratesEUR },\n\t\t\t} = await resultEUR.json();\n\t\t\tconst {\n\t\t\t\tdate: dateUSD,\n\t\t\t\trates: { RUB: ratesUSD },\n\t\t\t} = await resultUSD.json();\n\t\t\tdispatch({\n\t\t\t\ttype: 'ADD_CURRENCY',\n\t\t\t\tpayload: {\n\t\t\t\t\tcurrencyEUR: [new Date(dateEUR).getTime(), ratesEUR],\n\t\t\t\t\tcurrencyUSD: [new Date(dateUSD).getTime(), ratesUSD],\n\t\t\t\t},\n\t\t\t});\n\t\t\treturn setCount(count + 1);\n\t\t},\n\t\tisRunning ? 1000 : null\n\t);\n\n\treturn (\n\t\t<div className=\"chart\">\n\t\t\t<HighchartsReact options={getChartConfig(currencyUSD, currencyEUR)} />\n\t\t</div>\n\t);\n};\n\nexport default Chart;\n","import Highcharts from 'highcharts';\n\nexport default (dataUSD, dataEUR) => {\n\treturn {\n\t\tchart: {\n\t\t\treflow: true,\n\t\t\tzoomType: 'x',\n\t\t},\n\t\ttitle: {\n\t\t\ttext: 'RUB to EUR and RUB to USD exchange rate over time',\n\t\t},\n\t\txAxis: {\n\t\t\ttype: 'datetime',\n\t\t},\n\t\tyAxis: {\n\t\t\ttitle: {\n\t\t\t\ttext: 'Exchange rate',\n\t\t\t},\n\t\t},\n\t\tlegend: {\n\t\t\tenabled: false,\n\t\t},\n\t\tseries: [\n\t\t\t{\n\t\t\t\tname: 'RUB to USD',\n\t\t\t\tdata: dataUSD,\n\t\t\t\tthreshold: null,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'RUB to EUR',\n\t\t\t\tdata: dataEUR,\n\t\t\t\tthreshold: null,\n\t\t\t},\n\t\t],\n\t};\n};\n","import { addDays, eachDayOfInterval, formatISO } from 'date-fns';\n\nexport const getIsoDates = (fromDay) => {\n\tconst dates = eachDayOfInterval({ start: addDays(new Date(), -fromDay), end: new Date() });\n\tconst datesISO = dates.map(el => formatISO(el, { representation: 'date' }));\n\treturn datesISO;\n}","import { useEffect, useRef } from 'react';\n\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nexport const useInterval = (callback, delay) => {\n\tconst savedCallback = useRef();\n\n\tuseEffect(() => {\n\t\tsavedCallback.current = callback;\n\t}, [callback]);\n\n\tuseEffect(() => {\n\t\tconst handler = (...args) => savedCallback.current(...args);\n\n\t\tif (delay !== null) {\n\t\t\tconst id = setInterval(handler, delay);\n\n\t\t\treturn () => clearInterval(id);\n\t\t}\n\t}, [delay]);\n};\n","import React from 'react';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport './App.css';\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">Currency chart</header>\n\t\t\t<div className=\"layout-container\">\n\t\t\t\t<Chart />\n\t\t\t\t<Table />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { StateProvider } from './store/store';\n\nconst app = (\n\t<React.StrictMode>\n\t\t<StateProvider>\n\t\t\t<App />\n\t\t</StateProvider>\n\t</React.StrictMode>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}